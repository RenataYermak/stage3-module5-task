plugins {
    id 'java-base'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:$webVersion"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:$jpaVersion"
        implementation "org.springframework.boot:spring-boot-starter-aop:$aopVersion"
        implementation "io.springfox:springfox-swagger2:$swaggerVersion"
        implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
        implementation "org.aspectj:aspectjweaver:$aspectjVersion"
        implementation "org.projectlombok:lombok:$lombokVersion"
        implementation "org.postgresql:postgresql:$postgresVersion"
        implementation "javax.xml.bind:jaxb-api:$javaxXmlBindVersion"
        implementation "org.testcontainers:postgresql:$testContainerVersion"
        implementation "org.springdoc:springdoc-openapi-ui:$springdocVersion"

        testImplementation "org.assertj:assertj-core:$assertjVersion"
        testImplementation "com.h2database:h2:$h2Version"
        testImplementation 'org.mockito:mockito-core:3.9.0'
        implementation 'org.mockito:mockito-junit-jupiter:3.8.0'
        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:$archUnitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
    }
    test {
        useJUnitPlatform()
    }

}

task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.ApplicationRunner'
            )
        }
    }
}